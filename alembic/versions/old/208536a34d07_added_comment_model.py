"""Added comment model

Revision ID: 208536a34d07
Revises: 514751336814
Create Date: 2024-01-25 02:35:31.727108

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = "208536a34d07"
down_revision = "514751336814"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    conn = op.get_bind()
    conn.execute(text("CREATE EXTENSION IF NOT EXISTS ltree;"))

    op.create_table(
        "service_comments",
        sa.Column(
            "path", sqlalchemy_utils.types.ltree.LtreeType(), nullable=False
        ),
        sa.Column("content_type", sa.String(), nullable=False),
        sa.Column("content_id", sa.Uuid(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("author_id", sa.Uuid(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["service_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_comments_path",
        "service_comments",
        ["path"],
        unique=False,
        postgresql_using="gist",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_comments_path",
        table_name="service_comments",
        postgresql_using="gist",
    )
    op.drop_table("service_comments")

    conn = op.get_bind()
    conn.execute(text("DROP EXTENSION IF EXISTS ltree;"))
    # ### end Alembic commands ###
