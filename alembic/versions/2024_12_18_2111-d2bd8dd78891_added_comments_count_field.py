"""Added comments_count field

Revision ID: d2bd8dd78891
Revises: 23086dc47605
Create Date: 2024-12-18 21:11:53.367858

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d2bd8dd78891"
down_revision = "23086dc47605"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("service_comment_votes")
    op.add_column(
        "service_collections",
        sa.Column(
            "comments_count", sa.Integer(), nullable=False, server_default="0"
        ),
    )
    op.add_column(
        "service_content_anime",
        sa.Column(
            "comments_count", sa.Integer(), nullable=False, server_default="0"
        ),
    )
    op.add_column(
        "service_content_manga",
        sa.Column(
            "comments_count", sa.Integer(), nullable=False, server_default="0"
        ),
    )
    op.add_column(
        "service_content_novel",
        sa.Column(
            "comments_count", sa.Integer(), nullable=False, server_default="0"
        ),
    )
    op.add_column(
        "service_edits",
        sa.Column(
            "comments_count", sa.Integer(), nullable=False, server_default="0"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("service_edits", "comments_count")
    op.drop_column("service_content_novel", "comments_count")
    op.drop_column("service_content_manga", "comments_count")
    op.drop_column("service_content_anime", "comments_count")
    op.drop_column("service_collections", "comments_count")
    op.create_table(
        "service_comment_votes",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("score", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("comment_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["service_comments.id"],
            name="service_comment_votes_comment_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["service_users.id"],
            name="service_comment_votes_user_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="service_comment_votes_pkey"),
    )
    # ### end Alembic commands ###
